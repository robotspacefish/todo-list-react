{"version":3,"sources":["components/Rating/Rating.js","components/AddTodo/AddTodo.js","components/Todo/Todo.js","components/TodoList/TodoList.js","containers/App.js","index.js"],"names":["Rating","_ref","handleRating","react_default","a","createElement","id","onClick","className","AddTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onAdd","e","preventDefault","error","input","target","add","value","trim","handleAddTodo","state","rating","setState","loopThroughBangs","initValue","condition","conditionValue","i","document","getElementById","concat","classList","remove","undefined","onSubmit","onKeyPress","type","name","placeholder","components_Rating_Rating","Component","Todo","times","todo","handleDeleteTodo","handleCompletedTodo","listType","defaultChecked","repeat","TodoList","todos","completedTodos","list","toConsumableArray","sort","b","sortActiveTodos","length","map","components_Todo_Todo","key","App","indexOf","prevState","todoToDelete","newTodoList","filter","completedTodo","handlePutBackActiveTodo","console","log","handleDeleteAllCompleted","totalActive","components_AddTodo_AddTodo","components_TodoList_TodoList","ReactDOM","render","src_containers_App"],"mappings":"8UAeeA,qBAZA,SAAAC,GAAsB,IAAnBC,EAAmBD,EAAnBC,aAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAa,IAAIM,UAAU,SAASF,GAAG,YAA5D,KACAH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAa,IAAIM,UAAU,SAASF,GAAG,YAA5D,KACAH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAa,IAAIM,UAAU,SAASF,GAAG,YAA5D,KACAH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAa,IAAIM,UAAU,SAASF,GAAG,YAA5D,KACAH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAa,IAAIM,UAAU,SAASF,GAAG,YAA5D,QCyESG,cA9Eb,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAOJ,KAWTQ,MAAQ,SAACC,GACPA,EAAEC,iBAEF,IACIC,EADEC,EAAQH,EAAEI,OAAOC,IAAIC,MAAMC,OAIjCL,EAAQV,EAAKD,MAAMiB,cAAcL,EAAOX,EAAKiB,MAAMC,QACnDlB,EAAKmB,SAAS,CAAET,UAGhBF,EAAEI,OAAOC,IAAIC,MAAQ,GAGrBd,EAAKmB,SAAS,CAAED,OAAS,IAGzBlB,EAAKoB,iBAAiB,EAAG,SAAU,IA7BjBpB,EAgCpBT,aAAe,SAAC2B,GACVA,EAAS,GAAKA,IAAWlB,EAAKiB,MAAMC,QAEtClB,EAAKoB,iBAAiB,EAAG,SAAU,GACnCpB,EAAKmB,SAAS,CAAED,OAAS,MAGzBlB,EAAKmB,SAAS,CAAED,WAGhBlB,EAAKoB,iBAAiBF,EAAQ,MAAO,GAErClB,EAAKoB,iBAAiBF,EAAO,EAAG,SAAU,KA5C1BlB,EAgDpBoB,iBAAmB,SAACC,EAAWC,EAAWC,GACxC,GAAkB,WAAdD,EACF,IAAK,IAAIE,EAAIH,EAAWG,GAAKD,EAAgBC,IAAK,CACnCC,SAASC,eAAT,UAAAC,OAAkCH,IAC1CI,UAAUC,OAAO,cAGxB,IAAK,IAAIL,EAAIH,EAAWG,GAAKD,EAAgBC,IAAK,CACnCC,SAASC,eAAT,UAAAC,OAAkCH,IAC1CI,UAAUf,IAAI,WAvDvBb,EAAKiB,MAAQ,CACXP,WAAQoB,EACRZ,OAAS,GAJOlB,wEA+DlB,OACER,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YACNH,EAAAC,EAAAC,cAAA,QAAMqC,SAAU5B,KAAKI,MAAOZ,GAAG,iBAC7BH,EAAAC,EAAAC,cAAA,SAAOsC,WAAY7B,KAAK6B,WACtBC,KAAK,OAAOC,KAAK,MAAMC,YAAY,aACrC3C,EAAAC,EAAAC,cAAC0C,EAAD,CAAQ7C,aAAcY,KAAKZ,eAC3BC,EAAAC,EAAAC,cAAA,sBAGDS,KAAKc,MAAMP,OAASlB,EAAAC,EAAAC,cAAA,KAAGG,UAAU,aAAaM,KAAKc,MAAMP,eAzE5C2B,aCgBPC,SAjBF,SAAAhD,GAA8D,IAClDiD,EADTC,EAA2DlD,EAA3DkD,KAAMC,EAAqDnD,EAArDmD,iBAAkBC,EAAmCpD,EAAnCoD,oBAAqBC,EAAcrD,EAAdqD,SAG3D,OACEnD,EAAAC,EAAAC,cAAA,OAAKG,UAAS,GAAA8B,OAAKgB,EAAL,eAGZnD,EAAAC,EAAAC,cAAA,SAAOE,QAAS,kBAAM8C,EAAoBF,EAAMG,IAAWV,KAAK,WAAWpC,UAAU,gBAAgBqC,KAAK,WAAWU,eAA6B,cAAbD,IAErInD,EAAAC,EAAAC,cAAA,KAAGG,UAAU,YAAY2C,EAAKA,MAC9BhD,EAAAC,EAAAC,cAAA,QAAMG,UAAU,mBATG0C,EAS6BC,EAAKtB,OATxB,KAAK2B,OAAON,KAUzC/C,EAAAC,EAAAC,cAAA,UAAQG,UAAU,kBAAkBD,QAAS,kBAAM6C,EAAiBD,EAAMG,KAA1E,aCmBSG,SA7BE,SAAAxD,GAAgF,IAA7EyD,EAA6EzD,EAA7EyD,MAAOC,EAAsE1D,EAAtE0D,eAAgBP,EAAsDnD,EAAtDmD,iBAAkBC,EAAoCpD,EAApCoD,oBAAqBC,EAAerD,EAAfqD,SAU1EM,EAAoB,WAAbN,EAHW,SAACI,GAAD,OAAW9C,OAAAiD,EAAA,EAAAjD,CAAI8C,GAAOI,KAAK,SAAC1D,EAAG2D,GAAJ,OAAUA,EAAElC,OAASzB,EAAEyB,SAGrCmC,CAAgBN,GAASC,EAE9D,OACExD,EAAAC,EAAAC,cAAA,OAAKC,GAAE,GAAAgC,OAAKgB,EAAL,SAAsB9C,UAAU,aAEnCoD,EAAKK,OAAO,EAAIL,EAAKM,IAAI,SAAAf,GAAI,OAC3BhD,EAAAC,EAAAC,cAAC8D,EAAD,CAAMhB,KAAMA,EACVC,iBAAkBA,EAClBC,oBAAqBA,EACrBC,SAAUA,EACVc,IAAKjB,EAAKA,SAGC,WAAbG,EAAwBnD,EAAAC,EAAAC,cAAA,8BAA2B,QC2F9CgE,cAhHb,SAAAA,EAAY3D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,IACjB1D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAApD,KAAAH,KAAMJ,KAYRiB,cAAgB,SAACL,EAAOO,GACtB,GAAIP,EAAM2C,OAAS,EACjB,MAAO,uBACF,GAAItD,EAAKiB,MAAM8B,MAAMY,QAAQhD,IAAU,EAC5C,MAAO,2BAGT,IAAM6B,EAAO,CACXA,KAAO7B,EACPO,OAASA,GAEXlB,EAAKmB,SAAS,SAAAyC,GAAS,MAAK,CAC1Bb,MAAK,GAAApB,OAAA1B,OAAAiD,EAAA,EAAAjD,CAAM2D,EAAUb,OAAhB,CAAuBP,QAzBbxC,EAiCnByC,iBAAmB,SAACoB,EAAclB,GAEhC,IACMmB,GADoB,WAAbnB,EAAwB3C,EAAKiB,MAAM8B,MAAQ/C,EAAKiB,MAAM+B,gBAC1Ce,OAAO,SAAAvB,GAC9B,OAAOA,IAASqB,IAEL,WAAblB,EAAwB3C,EAAKmB,SAAS,CAAE4B,MAAM9C,OAAAiD,EAAA,EAAAjD,CAAK6D,KACjD9D,EAAKmB,SAAS,CAAE6B,eAAe/C,OAAAiD,EAAA,EAAAjD,CAAK6D,MAxCrB9D,EAiDnB0C,oBAAsB,SAACsB,EAAerB,GAEpC3C,EAAKyC,iBAAiBuB,EAAerB,GAGrB,cAAZA,EACF3C,EAAKiE,wBAAwBD,GAE7BhE,EAAKmB,SAAS,SAAAyC,GAAS,MAAK,CAC1BZ,eAAc,GAAArB,OAAA1B,OAAAiD,EAAA,EAAAjD,CAAM2D,EAAUZ,gBAAhB,CAAgCgB,QA1DjChE,EAmEnBiE,wBAA0B,SAACD,GACzBE,QAAQC,IAAI,gBACZnE,EAAKmB,SAAS,SAAAyC,GAAS,MAAK,CAC1Bb,MAAK,GAAApB,OAAA1B,OAAAiD,EAAA,EAAAjD,CAAM2D,EAAUb,OAAhB,CAAuBiB,QAtEbhE,EA6EnBoE,yBAA2B,kBAAMpE,EAAKmB,SAAU,CAAE6B,eAAiB,MA3EjEhD,EAAKiB,MAAQ,CACX8B,MAAQ,GACRC,eAAiB,IAJFhD,wEAgFjB,IAAMqE,EAAclE,KAAKc,MAAM8B,MAAQ5C,KAAKc,MAAM8B,MAAMO,OAAS,EACjE,OACE9D,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,KAAGC,GAAG,0BAAN,iBAA6CH,EAAAC,EAAAC,cAAA,YAAO2E,IAEpD7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAStD,cAAeb,KAAKa,gBAE7BxB,EAAAC,EAAAC,cAAC6E,EAAD,CACExB,MAAO5C,KAAKc,MAAM8B,MAClBN,iBAAkBtC,KAAKsC,iBACvBC,oBAAqBvC,KAAKuC,oBAC1BC,SAAS,WAITxC,KAAKc,MAAM+B,eAAeM,OAAS,GACjC9D,EAAAC,EAAAC,cAAA,UAAQC,GAAG,uBACTC,QAASO,KAAKiE,0BADhB,wBAKJ5E,EAAAC,EAAAC,cAAC6E,EAAD,CACEvB,eAAgB7C,KAAKc,MAAM+B,eAC3BP,iBAAkBtC,KAAKsC,iBACvBC,oBAAqBvC,KAAKuC,oBAC1BC,SAAS,sBA1GDN,aCAlBmC,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASjD,SAASC,eAAe","file":"static/js/main.51a3d8e7.chunk.js","sourcesContent":["import React from 'react';\nimport './Rating.css';\n\nconst Rating = ({ handleRating }) => {\n  return (\n    <div id=\"ratings\">\n      <span onClick={() => handleRating(5)} className=\"rating\" id=\"rating-5\">!</span>\n      <span onClick={() => handleRating(4)} className=\"rating\" id=\"rating-4\">!</span>\n      <span onClick={() => handleRating(3)} className=\"rating\" id=\"rating-3\">!</span>\n      <span onClick={() => handleRating(2)} className=\"rating\" id=\"rating-2\">!</span>\n      <span onClick={() => handleRating(1)} className=\"rating\" id=\"rating-1\">!</span>\n    </div>\n  );\n};\n\nexport default Rating;","import React, { Component } from 'react';\nimport './AddTodo.css';\nimport Rating from '../Rating/Rating';\n\nclass AddTodo extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      error : undefined,\n      rating : 0\n    }\n  }\n\n  /**\n   * @desc function to pass input value to handleAddTodo\n   * @param string $e - the input value\n  **/\n  onAdd = (e) => {\n    e.preventDefault();\n\n    const input = e.target.add.value.trim();\n    let error = null;\n\n    // add todo and return error if todo was invalid\n    error = this.props.handleAddTodo(input, this.state.rating);\n    this.setState({ error });\n\n    // clear input field\n    e.target.add.value = '';\n\n    // reset rating\n    this.setState({ rating : 0 });\n\n    // clear .rated class from all bangs\n    this.loopThroughBangs(1, 'remove', 5);\n  }\n\n  handleRating = (rating) => {\n    if (rating > 0 && rating === this.state.rating) {\n      // clear .rated class from all bangs\n      this.loopThroughBangs(1, 'remove', 5);\n      this.setState({ rating : 0 });\n    } else {\n      //set rating in state\n      this.setState({ rating });\n\n      // add .rated class to bangs <= rating\n      this.loopThroughBangs(rating, 'add', 1);\n      // clear .rated class from bangs >= rating\n      this.loopThroughBangs(rating+1, 'remove', 5);\n    }\n  }\n\n  loopThroughBangs = (initValue, condition, conditionValue) => {\n    if (condition === 'remove') {\n      for (let i = initValue; i <= conditionValue; i++) {\n        const bang = document.getElementById(`rating-${i}`);\n        bang.classList.remove('rated');\n      }\n    } else { // remove\n      for (let i = initValue; i >= conditionValue; i--) {\n        const bang = document.getElementById(`rating-${i}`);\n        bang.classList.add('rated');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"add-todo\">\n        <form onSubmit={this.onAdd} id=\"add-todo-form\">\n          <input onKeyPress={this.onKeyPress}\n            type=\"text\" name=\"add\" placeholder=\"add todo\" />\n          <Rating handleRating={this.handleRating} />\n          <button>Add</button>\n        </form>\n\n        {this.state.error && <p className=\"error-msg\">{this.state.error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;","import React from 'react';\nimport './Todo.css';\n\nconst Todo = ({ todo, handleDeleteTodo, handleCompletedTodo, listType}) => {\n  const displayRating = (times) => '! '.repeat(times);\n\n  return (\n    <div className={`${listType}-item todo`}>\n      {/* TODO outputting in an input element for future editing feature */ }\n\n      <input onClick={() => handleCompletedTodo(todo, listType)} type=\"checkbox\" className=\"completed-btn\" name=\"complete\" defaultChecked={listType === 'completed'}/>\n\n      <p className=\"todo-txt\">{todo.todo}</p>\n      <span className=\"urgency-rating\">{displayRating(todo.rating)}</span>\n      <button className=\"delete-todo-btn\" onClick={() => handleDeleteTodo(todo, listType)}>Delete</button>\n    </div>\n  );\n}\n\n\nexport default Todo;","import React from 'react';\nimport Todo from '../Todo/Todo';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, completedTodos, handleDeleteTodo, handleCompletedTodo, listType }) => {\n\n  /**\n   * @desc function to sort the active todos by their urgency rating\n   * @param array $todos - the array of active todos\n   * @return sorted array\n  **/\n  const sortActiveTodos = (todos) => [...todos].sort((a, b) => b.rating - a.rating);\n\n  // set list type to display\n  const list = listType === 'active' ? sortActiveTodos(todos) : completedTodos;\n\n  return (\n    <div id={`${listType}-list`} className=\"todo-list\">\n      {\n        list.length>0 ? list.map(todo =>\n          <Todo todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleCompletedTodo={handleCompletedTodo}\n            listType={listType}\n            key={todo.todo}\n          />\n        ) :\n          listType === 'active' ? <p>You have no todos</p> : null\n      }\n    </div>\n  );\n};\n\nexport default TodoList;","import React, { Component } from 'react';\nimport './App.css';\nimport AddTodo from '../components/AddTodo/AddTodo';\nimport TodoList from '../components/TodoList/TodoList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos : [],\n      completedTodos : []\n    };\n  }\n\n  /**\n   * @desc function to add a todo from input to the todos array\n   * @params string $input - the todo text entered\n   *         int $rating - the urgency rating of the todo\n  **/\n  handleAddTodo = (input, rating) => {\n    if (input.length < 1) {\n      return 'Todo cannot be blank';\n    } else if (this.state.todos.indexOf(input) > -1) {\n      return 'This todo already exists';\n    }\n\n    const todo = {\n      todo : input,\n      rating : rating\n    }\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo]\n    }));\n  }\n\n  /**\n   * @desc function to remove a todo from the todos array\n   * @param string $todoToDelete\n  **/\n  handleDeleteTodo = (todoToDelete, listType) => {\n    // set list type to display\n    const list = listType === 'active' ? this.state.todos : this.state.completedTodos;\n    const newTodoList = list.filter(todo => {\n      return todo !== todoToDelete;\n    });\n    listType === 'active' ? this.setState({ todos: [...newTodoList] }) :\n      this.setState({ completedTodos: [...newTodoList] })\n\n  }\n\n  /**\n   * @desc function to remove a todo from the todos array and add to completedTodos array\n   * @params string $completedTodo - the todo to move to the completed array\n   *         string $listType - if the type of list to push to is 'completed' or 'active'\n  **/\n  handleCompletedTodo = (completedTodo, listType) => {\n    // remove completed todo from todos\n    this.handleDeleteTodo(completedTodo, listType);\n\n    // add completed todo to completed todos\n    if (listType ==='completed') {\n      this.handlePutBackActiveTodo(completedTodo);\n    } else {\n      this.setState(prevState => ({\n        completedTodos: [...prevState.completedTodos, completedTodo]\n      }));\n    }\n  };\n\n  /**\n   * @desc function to remove a todo from the completed todos array and add to todos array\n   * @param string $completedTodo\n  **/\n  handlePutBackActiveTodo = (completedTodo) => {\n    console.log('putting back')\n    this.setState(prevState => ({\n      todos: [...prevState.todos, completedTodo]\n    }));\n  }\n\n  /**\n   * @desc function to delete all completed todos from completedTodos array\n  **/\n  handleDeleteAllCompleted = () => this.setState( { completedTodos : [] });\n\n  render() {\n    const totalActive = this.state.todos ? this.state.todos.length : 0;\n    return (\n      <div className=\"App\">\n        <p id=\"active-remaining-todos\">Things To Do: <span>{totalActive}</span></p>\n\n        <AddTodo handleAddTodo={this.handleAddTodo} />\n\n        <TodoList\n          todos={this.state.todos}\n          handleDeleteTodo={this.handleDeleteTodo}\n          handleCompletedTodo={this.handleCompletedTodo}\n          listType=\"active\"\n        />\n\n        {\n          this.state.completedTodos.length > 0 &&\n            <button id=\"delete-all-completed\"\n              onClick={this.handleDeleteAllCompleted}>Delete All Completed\n            </button>\n        }\n\n        <TodoList\n          completedTodos={this.state.completedTodos}\n          handleDeleteTodo={this.handleDeleteTodo}\n          handleCompletedTodo={this.handleCompletedTodo}\n          listType=\"completed\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}