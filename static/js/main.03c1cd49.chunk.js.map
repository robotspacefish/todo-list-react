{"version":3,"sources":["components/Rating/Rating.js","components/AddTodo/AddTodo.js","components/Todo/Todo.js","components/TodoList/TodoList.js","containers/App.js","index.js"],"names":["Rating","_ref","handleRating","react_default","a","createElement","id","onClick","className","AddTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onAdd","e","preventDefault","error","input","target","add","value","trim","handleAddTodo","state","rating","setState","clearAndReset","loopThroughBangs","initValue","condition","conditionValue","i","document","getElementById","concat","classList","remove","undefined","onSubmit","onKeyPress","type","name","placeholder","components_Rating_Rating","Component","Todo","times","todo","handleDeleteTodo","handleCompletedTodoToggle","listType","defaultChecked","repeat","TodoList","todos","completedTodos","list","toConsumableArray","sort","b","sortActiveTodos","length","map","components_Todo_Todo","key","App","checkForInvalidInput","addTodoToActiveState","setTodoParams","isCompleted","createKey","active","filter","toLowerCase","completed","prevState","addTodoToCompletedState","split","join","filterTodoFromList","todoToDelete","newListArray","replaceActiveArrayState","replaceCompletedArrayState","toggleCompletedStatus","listToRemoveFrom","listWithoutTodo","handleDeleteAllCompleted","JSON","parse","localStorage","getItem","console","prevProps","setItem","stringify","totalActive","components_AddTodo_AddTodo","components_TodoList_TodoList","href","rel","ReactDOM","render","src_containers_App"],"mappings":"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","file":"static/js/main.03c1cd49.chunk.js","sourcesContent":["import React from 'react';\nimport './Rating.css';\n\nconst Rating = ({ handleRating }) => {\n  return (\n    <div id=\"ratings\">\n      <span onClick={() => handleRating(5)} className=\"rating\" id=\"rating-5\">!</span>\n      <span onClick={() => handleRating(4)} className=\"rating\" id=\"rating-4\">!</span>\n      <span onClick={() => handleRating(3)} className=\"rating\" id=\"rating-3\">!</span>\n      <span onClick={() => handleRating(2)} className=\"rating\" id=\"rating-2\">!</span>\n      <span onClick={() => handleRating(1)} className=\"rating\" id=\"rating-1\">!</span>\n    </div>\n  );\n};\n\nexport default Rating;","import React, { Component } from 'react';\nimport './AddTodo.css';\nimport Rating from '../Rating/Rating';\n\nclass AddTodo extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      error : undefined,\n      rating : 0\n    }\n  }\n\n  /**\n   * @desc function to pass input value to handleAddTodo\n   * @param string $e - the input value\n  **/\n  onAdd = (e) => {\n    e.preventDefault();\n\n    const input = e.target.add.value.trim();\n    let error = null;\n\n    // add todo and return error if todo was invalid\n    error = this.props.handleAddTodo(input, this.state.rating);\n    this.setState({ error });\n    this.clearAndReset(e);\n  }\n\n  /**\n   * @desc function to clear and reset inputm rating, and bangs\n   * @param object $e - the input dom event\n  **/\n  clearAndReset = (e) => {\n    // clear input field\n    e.target.add.value = '';\n    // reset rating\n    this.setState({ rating: 0 });\n    // clear .rated class from all bangs\n    this.loopThroughBangs(1, 'remove', 5);\n  }\n\n  handleRating = (rating) => {\n    if (rating > 0 && rating === this.state.rating) {\n      // clear .rated class from all bangs\n      this.loopThroughBangs(1, 'remove', 5);\n      this.setState({ rating : 0 });\n    } else {\n      //set rating in state\n      this.setState({ rating });\n\n      // add .rated class to bangs <= rating\n      this.loopThroughBangs(rating, 'add', 1);\n      // clear .rated class from bangs >= rating\n      this.loopThroughBangs(rating+1, 'remove', 5);\n    }\n  }\n\n  loopThroughBangs = (initValue, condition, conditionValue) => {\n    if (condition === 'remove') {\n      for (let i = initValue; i <= conditionValue; i++) {\n        const bang = document.getElementById(`rating-${i}`);\n        bang.classList.remove('rated');\n      }\n    } else { // remove\n      for (let i = initValue; i >= conditionValue; i--) {\n        const bang = document.getElementById(`rating-${i}`);\n        bang.classList.add('rated');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"add-todo\">\n        <form onSubmit={this.onAdd} id=\"add-todo-form\">\n          <input onKeyPress={this.onKeyPress}\n            type=\"text\" name=\"add\" placeholder=\"add todo\" />\n          <Rating handleRating={this.handleRating} />\n          <button>Add</button>\n        </form>\n\n        {this.state.error && <p className=\"error-msg\">{this.state.error}</p>}\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;","import React from 'react';\nimport './Todo.css';\n\nconst Todo = ({ todo, handleDeleteTodo, handleCompletedTodoToggle, listType}) => {\n  const displayRating = (times) => '! '.repeat(times);\n\n  return (\n    <div className=\"todo\">\n      <input onClick={() => handleCompletedTodoToggle(todo)} type=\"checkbox\" className=\"completed-btn\" name=\"complete\" defaultChecked={listType === 'completed'}/>\n\n      <p className=\"todo-txt\">{todo.todo}</p>\n      <span className=\"urgency-rating\">{displayRating(todo.rating)}</span>\n      <button className=\"delete-todo-btn\" onClick={() => handleDeleteTodo(todo, listType)}>Delete</button>\n    </div>\n  );\n}\n\n\nexport default Todo;","import React from 'react';\nimport Todo from '../Todo/Todo';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, completedTodos, handleDeleteTodo, handleCompletedTodoToggle, listType }) => {\n\n  /**\n   * @desc function to sort the active todos by their urgency rating\n   * @param array $todos - the array of active todos\n   * @return sorted array\n  **/\n  const sortActiveTodos = (todos) => [...todos].sort((a, b) => b.rating - a.rating);\n\n  // set list type to display\n  const list = listType === 'active' ? sortActiveTodos(todos) : completedTodos;\n\n  return (\n    <div className={`${listType}-list todo-list`}>\n      {\n        list.length>0 ? list.map(todo =>\n          <Todo todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleCompletedTodoToggle={handleCompletedTodoToggle}\n            listType={listType}\n            key={todo.todo}\n          />\n        ) :\n          listType === 'active' ? <p>You have no todos</p> : null\n      }\n    </div>\n  );\n};\n\nexport default TodoList;","import React, { Component } from 'react';\nimport './App.css';\nimport AddTodo from '../components/AddTodo/AddTodo';\nimport TodoList from '../components/TodoList/TodoList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active : [],\n      completed : []\n    };\n  }\n\n  componentDidMount() {\n    try {\n      const active = JSON.parse(localStorage.getItem('active'));\n      const completed = JSON.parse(localStorage.getItem('completed'));\n      if (active) { this.setState(() => ({ active })) }\n\n      if (completed) { this.setState(() => ({ completed })) }\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // update active state if different\n    if (prevState.active.length !== this.state.active.length) {\n      localStorage.setItem('active', JSON.stringify(this.state.active));\n    }\n    // update completed state if different\n    if (prevState.completed.length !== this.state.completed.length) {\n      localStorage.setItem('completed', JSON.stringify(this.state.completed));\n    }\n  }\n\n  /**\n   * @desc function to add a todo from input to the todos array\n   * @params string $input - the todo text entered\n   *         int $rating - the urgency rating of the todo\n  **/\n  handleAddTodo = (input, rating) => {\n    const error = this.checkForInvalidInput(input);\n    if (error !== undefined) {\n      return error;\n    }\n    this.addTodoToActiveState(this.setTodoParams(input, rating));\n  }\n\n  setTodoParams = (input, rating) => ({\n      todo : input,\n      rating : rating,\n      isCompleted : false,\n      key : this.createKey(input)\n    });\n\n  checkForInvalidInput = input => {\n    if (input.length < 1) {\n      return 'Todo cannot be blank';\n    } else if (this.state.active.filter(todo => todo.todo.toLowerCase() === input.toLowerCase()).length > 0) {\n      return 'This todo already exists';\n    } else if (this.state.completed.filter(todo => todo.todo.toLowerCase() === input.toLowerCase()).length > 0 ) {\n      return 'This todo already exists as Completed. Uncheck it to move it up to your Active todos, or delete it and recreate it.';\n    }\n  };\n\n  addTodoToActiveState = todo => (\n    this.setState(prevState => (\n      { active : [...prevState.active, todo] }\n    ))\n  );\n\n  addTodoToCompletedState = todo => this.setState(prevState => (\n    { completed : [...prevState.completed, todo] }\n  ))\n\n  createKey = input => input.toLowerCase().split(' ').join('_');\n\n  /**\n   * @desc function to remove a todo from the array provided\n   * @param string $todoToDelete - the todo to remove\n   * @param array $list - the list to remove the todo from\n  **/\n  filterTodoFromList = (todoToDelete, list) => (\n    list.filter(todo => todo !== todoToDelete)\n  );\n\n  /**\n   * @desc function to handle setting the list and todo to remove\n   * @param string $todoToDelete - the todo to remove\n   * @param string listType - 'active' or 'completed'\n  **/\n  handleDeleteTodo = (todoToDelete, listType) => {\n    const newListArray = this.filterTodoFromList(todoToDelete, this.state[listType]);\n\n    listType === 'active'\n      ? this.replaceActiveArrayState(newListArray)\n      : this.replaceCompletedArrayState(newListArray);\n  }\n\n  replaceActiveArrayState = (active) => (this.setState({ active }));\n\n  replaceCompletedArrayState = (completed) => (this.setState({ completed }));\n\n  /**\n   * @desc function to remove a todo from the todos array and add to completedTodos array\n   * @params string $completedTodo - the todo to move to the completed array\n   *         string $listType - if the type of list to push to is 'completed' or 'active'\n  **/\n  handleCompletedTodoToggle = (todo) => {\n    this.toggleCompletedStatus(todo);\n    const listToRemoveFrom = todo.isCompleted ? 'active' : 'completed';\n    const listWithoutTodo = this.filterTodoFromList(todo, this.state[listToRemoveFrom])\n    if (listToRemoveFrom === 'active') {\n      // add todo to completed\n      this.addTodoToCompletedState(todo)\n      // replace active list\n      this.replaceActiveArrayState(listWithoutTodo);\n    } else {\n      // add todo to active\n      this.addTodoToActiveState(todo)\n      // replace completed list\n      this.replaceCompletedArrayState(listWithoutTodo);\n    }\n  };\n\n  toggleCompletedStatus = (todo) => todo.isCompleted = !todo.isCompleted;\n\n  /**\n   * @desc function to delete all completed todos from completedTodos array\n  **/\n  handleDeleteAllCompleted = () => this.setState( { completed : [] });\n\n  render() {\n    const totalActive = this.state.active ? this.state.active.length : 0;\n    return (\n      <div className=\"App\">\n        <p id=\"active-remaining-todos\">Things To Do: <span>{totalActive}</span></p>\n\n        <AddTodo handleAddTodo={this.handleAddTodo} />\n\n        <TodoList\n          todos={this.state.active}\n          handleDeleteTodo={this.handleDeleteTodo}\n          handleCompletedTodoToggle={this.handleCompletedTodoToggle}\n          listType=\"active\"\n        />\n\n        {\n          this.state.completed.length > 0 &&\n            <button id=\"delete-all-completed\"\n              onClick={this.handleDeleteAllCompleted}>Delete All Completed\n            </button>\n        }\n\n        <TodoList\n          completedTodos={this.state.completed}\n          handleDeleteTodo={this.handleDeleteTodo}\n          handleCompletedTodoToggle={this.handleCompletedTodoToggle}\n          listType=\"completed\"\n        />\n\n        <footer>\n          <p>This app uses local storage to save your todos in your browser</p>\n          <p> <a href=\"http://robotspacefish.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">robotspacefish!</a> 2019</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}